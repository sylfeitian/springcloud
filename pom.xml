<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.itmuch.cloud</groupId>
  <artifactId>microservice-discovery-eureka-ha</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <!-- 引入spring boot的依赖 -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.4.3.RELEASE</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka-server</artifactId>
    </dependency>
  </dependencies>

  <!-- 引入spring cloud的依赖 -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Camden.SR4</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- 添加spring-boot的maven插件 -->
  <build>
    <plugins>
    <!-- 打包插件 -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- docker插件,用于生成镜像文件 -->
      <plugin>
      	<groupId>com.spotify</groupId>
      	<artifactId>docker-maven-plugin</artifactId>
      	<version>0.4.13</version>
      	<configuration>
      		<dockerHost>http://192.168.0.115:5000</dockerHost>
      		<imageName>sylfeitian/microservice-discovery-eureka:0.0.1</imageName>
      		<baseImage>java</baseImage>
<!--       		<serverId>docker-hub</serverId> -->
<!-- 			<registryUrl>http://192.168.0.115:5000/sylfeitian</registryUrl> -->
<!-- 			<exposes>5000</exposes> -->
      		<entryPoint>["java","-jar","/${project.build.finaName}.jar"]</entryPoint>
      		<resources>
      			<resource>
      				<targetPath>/</targetPath>
      				<directory>${project.build.directory}</directory>
      				<include>${project.build.finaName}.jar</include>
      			</resource>
      		</resources>
      	</configuration>
      </plugin>
    </plugins>
  </build>
</project>
